apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    namespace "net.dcnnt"
    compileSdk 35
    defaultConfig {
        applicationId "net.dcnnt"
        minSdkVersion 22
        targetSdkVersion 35
        versionCode 27
        versionName '0.12.0'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_18
        targetCompatibility = JavaVersion.VERSION_18
    }
    kotlinOptions {
        jvmTarget = "18"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.core:core-ktx:1.15.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation "androidx.work:work-runtime:2.10.0"
    implementation "androidx.work:work-runtime-ktx:2.10.0"
    implementation 'androidx.test:core-ktx:1.6.1'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:core:1.6.1'
    androidTestImplementation 'androidx.test:runner:1.6.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.3.0'
}

tasks.register('dcnntAndroidTestsEnvironment') {
    doLast {
        exec {
            commandLine "pkill", "-f", "dcnnt"
            ignoreExitValue true
        }
        exec {
            workingDir "$buildDir/../.."
            commandLine "bash", "-c", "./prepare-dcnnt-server.sh &> /dev/null < /dev/null &"
        }
    }
}

tasks.register('dcnntAndroidRestartEmulator') {
    doLast {
        exec {
            commandLine "pkill", "-f", "emulator/qemu"
            ignoreExitValue true
        }
        exec {
            commandLine "bash", "-c", "rm -f ~/.android/avd/**/*.lock"
        }
        exec {
            commandLine "${android.sdkDirectory}/tools/emulator", "-avd", "test_avd"
        }
    }
}
